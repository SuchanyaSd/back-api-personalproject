generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  firstname String
  lastname  String
  password  String
  email     String   @unique
  address   String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
}

model Product {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  price       Int
  categoryId  Int
  category    Category      @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  bestseller  Boolean       @default(false)
  date        DateTime      @default(now())
  orderItems  Order_Item[]
  AllImages   AllImages[]
  sizes       ProductSize[] // ใช้ตารางกลางแทน
}

model Size {
  id   Int    @id @default(autoincrement())
  size String @unique

  products     ProductSize[] // ใช้ตารางกลางแทน
  order_ItemId Int?
  orderId      Int?
  Order_Item   Order_Item[]
}

// ตารางกลาง Many-to-Many ระหว่าง Product และ Size
model ProductSize {
  productId Int
  sizeId    Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  size      Size    @relation(fields: [sizeId], references: [id], onDelete: Cascade)

  @@id([productId, sizeId]) // ตั้ง Primary Key เป็น (productId, sizeId)
}

model AllImages {
  id        Int      @id @default(autoincrement())
  productId Int?
  products  Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
  url       String
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  products Product[]
}

model Order {
  id         Int      @id @default(autoincrement())
  customerId Int
  orderDate  DateTime @default(now())
  totalPrice Int

  paymentDate   DateTime?    @default(now())
  paymentMethod String?
  paymentStatus Boolean       @default(false)
  orderItems    Order_Item[]
  completed     Boolean      @default(false)
}

model Order_Item {
  id        Int     @id @default(autoincrement())
  orderId   Int
  orders    Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  productId Int
  products  Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  sizeId    Int
  size      Size    @relation(fields: [sizeId], references: [id], onDelete: Cascade)
}
